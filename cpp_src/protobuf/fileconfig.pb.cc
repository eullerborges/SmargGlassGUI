// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fileconfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "fileconfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* TimingConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TimingConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_fileconfig_2eproto() {
  protobuf_AddDesc_fileconfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "fileconfig.proto");
  GOOGLE_CHECK(file != NULL);
  TimingConfig_descriptor_ = file->message_type(0);
  static const int TimingConfig_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimingConfig, period_),
  };
  TimingConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TimingConfig_descriptor_,
      TimingConfig::default_instance_,
      TimingConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimingConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimingConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TimingConfig));
  FileConfig_descriptor_ = file->message_type(1);
  static const int FileConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileConfig, timingconfig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileConfig, repledsvalues_),
  };
  FileConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileConfig_descriptor_,
      FileConfig::default_instance_,
      FileConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileConfig));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_fileconfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TimingConfig_descriptor_, &TimingConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileConfig_descriptor_, &FileConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_fileconfig_2eproto() {
  delete TimingConfig::default_instance_;
  delete TimingConfig_reflection_;
  delete FileConfig::default_instance_;
  delete FileConfig_reflection_;
}

void protobuf_AddDesc_fileconfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_Protocol_5fLeds_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020fileconfig.proto\032\023Protocol_Leds.proto\""
    "\036\n\014TimingConfig\022\016\n\006period\030\001 \002(\r\"U\n\nFileC"
    "onfig\022#\n\014timingConfig\030\001 \001(\0132\r.TimingConf"
    "ig\022\"\n\rrepLedsValues\030\002 \003(\0132\013.LedsValues", 158);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fileconfig.proto", &protobuf_RegisterTypes);
  TimingConfig::default_instance_ = new TimingConfig();
  FileConfig::default_instance_ = new FileConfig();
  TimingConfig::default_instance_->InitAsDefaultInstance();
  FileConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_fileconfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_fileconfig_2eproto {
  StaticDescriptorInitializer_fileconfig_2eproto() {
    protobuf_AddDesc_fileconfig_2eproto();
  }
} static_descriptor_initializer_fileconfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TimingConfig::kPeriodFieldNumber;
#endif  // !_MSC_VER

TimingConfig::TimingConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TimingConfig)
}

void TimingConfig::InitAsDefaultInstance() {
}

TimingConfig::TimingConfig(const TimingConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TimingConfig)
}

void TimingConfig::SharedCtor() {
  _cached_size_ = 0;
  period_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TimingConfig::~TimingConfig() {
  // @@protoc_insertion_point(destructor:TimingConfig)
  SharedDtor();
}

void TimingConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TimingConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimingConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TimingConfig_descriptor_;
}

const TimingConfig& TimingConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fileconfig_2eproto();
  return *default_instance_;
}

TimingConfig* TimingConfig::default_instance_ = NULL;

TimingConfig* TimingConfig::New() const {
  return new TimingConfig;
}

void TimingConfig::Clear() {
  period_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TimingConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TimingConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 period = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &period_)));
          set_has_period();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TimingConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TimingConfig)
  return false;
#undef DO_
}

void TimingConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TimingConfig)
  // required uint32 period = 1;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->period(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TimingConfig)
}

::google::protobuf::uint8* TimingConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TimingConfig)
  // required uint32 period = 1;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->period(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TimingConfig)
  return target;
}

int TimingConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 period = 1;
    if (has_period()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->period());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimingConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TimingConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TimingConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TimingConfig::MergeFrom(const TimingConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_period()) {
      set_period(from.period());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TimingConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimingConfig::CopyFrom(const TimingConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimingConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TimingConfig::Swap(TimingConfig* other) {
  if (other != this) {
    std::swap(period_, other->period_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TimingConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TimingConfig_descriptor_;
  metadata.reflection = TimingConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FileConfig::kTimingConfigFieldNumber;
const int FileConfig::kRepLedsValuesFieldNumber;
#endif  // !_MSC_VER

FileConfig::FileConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FileConfig)
}

void FileConfig::InitAsDefaultInstance() {
  timingconfig_ = const_cast< ::TimingConfig*>(&::TimingConfig::default_instance());
}

FileConfig::FileConfig(const FileConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FileConfig)
}

void FileConfig::SharedCtor() {
  _cached_size_ = 0;
  timingconfig_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileConfig::~FileConfig() {
  // @@protoc_insertion_point(destructor:FileConfig)
  SharedDtor();
}

void FileConfig::SharedDtor() {
  if (this != default_instance_) {
    delete timingconfig_;
  }
}

void FileConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileConfig_descriptor_;
}

const FileConfig& FileConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_fileconfig_2eproto();
  return *default_instance_;
}

FileConfig* FileConfig::default_instance_ = NULL;

FileConfig* FileConfig::New() const {
  return new FileConfig;
}

void FileConfig::Clear() {
  if (has_timingconfig()) {
    if (timingconfig_ != NULL) timingconfig_->::TimingConfig::Clear();
  }
  repledsvalues_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FileConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .TimingConfig timingConfig = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timingconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_repLedsValues;
        break;
      }

      // repeated .LedsValues repLedsValues = 2;
      case 2: {
        if (tag == 18) {
         parse_repLedsValues:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_repledsvalues()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_repLedsValues;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FileConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FileConfig)
  return false;
#undef DO_
}

void FileConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FileConfig)
  // optional .TimingConfig timingConfig = 1;
  if (has_timingconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->timingconfig(), output);
  }

  // repeated .LedsValues repLedsValues = 2;
  for (int i = 0; i < this->repledsvalues_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->repledsvalues(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FileConfig)
}

::google::protobuf::uint8* FileConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FileConfig)
  // optional .TimingConfig timingConfig = 1;
  if (has_timingconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->timingconfig(), target);
  }

  // repeated .LedsValues repLedsValues = 2;
  for (int i = 0; i < this->repledsvalues_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->repledsvalues(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FileConfig)
  return target;
}

int FileConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .TimingConfig timingConfig = 1;
    if (has_timingconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->timingconfig());
    }

  }
  // repeated .LedsValues repLedsValues = 2;
  total_size += 1 * this->repledsvalues_size();
  for (int i = 0; i < this->repledsvalues_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->repledsvalues(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileConfig::MergeFrom(const FileConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  repledsvalues_.MergeFrom(from.repledsvalues_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timingconfig()) {
      mutable_timingconfig()->::TimingConfig::MergeFrom(from.timingconfig());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileConfig::CopyFrom(const FileConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileConfig::IsInitialized() const {

  if (has_timingconfig()) {
    if (!this->timingconfig().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->repledsvalues())) return false;
  return true;
}

void FileConfig::Swap(FileConfig* other) {
  if (other != this) {
    std::swap(timingconfig_, other->timingconfig_);
    repledsvalues_.Swap(&other->repledsvalues_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileConfig_descriptor_;
  metadata.reflection = FileConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
